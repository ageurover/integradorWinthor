/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package winthorDb.forms;

import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.LineNumberReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JFileChooser;
import winthorDb.error.MessageDialog;
import winthorDb.error.trataErro;
import winthorDb.jpa.Brz_InventarioSped;
import winthorDb.oracleDb.IntegracaoWinthorDb;
import winthorDb.util.Extenso;
import winthorDb.util.Formato;

/**
 *
 * @author ageurover
 */
public class Brz015 extends javax.swing.JFrame {

    List<Brz_InventarioSped> lstInventarioSped = new ArrayList<>();
    boolean cancel = false;
    IntegracaoWinthorDb wint = new IntegracaoWinthorDb();

    /**
     * Creates new form Brz001
     */
    public Brz015() {
        initComponents();
        setLocationRelativeTo(null);
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/winthorDb/forms/RoverTecnologiaIcone.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lblObsRegHSped = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtRegH010Sped = new javax.swing.JTextArea();
        btnAbrirOrigem = new javax.swing.JButton();
        edtArquivoOrigem = new javax.swing.JTextField();
        btnCancelarRegH010 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        btnSalvarRegH010Sped = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        edtAnoReferencia = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        edtCodFilial = new javax.swing.JTextField();

        setTitle("Conversão de Pedidos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/winthorDb/forms/RoverTecnologiaIcone.png"))); // NOI18N

        jLabel1.setText("Criação Registro Sped");

        jLabel3.setText("* * Importação do Registro H do arquivo sped para validar estoque fiscal do pediodo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados para importação"));

        lblObsRegHSped.setColumns(20);
        lblObsRegHSped.setFont(new java.awt.Font("Courier New", 0, 10)); // NOI18N
        lblObsRegHSped.setRows(5);
        lblObsRegHSped.setWrapStyleWord(true);
        jScrollPane1.setViewportView(lblObsRegHSped);

        txtRegH010Sped.setColumns(20);
        txtRegH010Sped.setFont(new java.awt.Font("Courier New", 0, 10)); // NOI18N
        txtRegH010Sped.setRows(5);
        txtRegH010Sped.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtRegH010Sped);

        btnAbrirOrigem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/winthorDb/forms/icons/folder.png"))); // NOI18N
        btnAbrirOrigem.setToolTipText("Arquivo de Origem");
        btnAbrirOrigem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirOrigemActionPerformed(evt);
            }
        });

        edtArquivoOrigem.setText("...");

        btnCancelarRegH010.setIcon(new javax.swing.ImageIcon(getClass().getResource("/winthorDb/forms/icons/close.png"))); // NOI18N
        btnCancelarRegH010.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarRegH010ActionPerformed(evt);
            }
        });

        btnSalvarRegH010Sped.setIcon(new javax.swing.ImageIcon(getClass().getResource("/winthorDb/forms/icons/diskette.png"))); // NOI18N
        btnSalvarRegH010Sped.setToolTipText("Grava Registro H01 no banco de dados");
        btnSalvarRegH010Sped.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarRegH010SpedActionPerformed(evt);
            }
        });

        jLabel4.setText("Ano/Mês Ref.:");

        edtAnoReferencia.setText("202301");
        edtAnoReferencia.setToolTipText("Ano e Mês de Referencia");

        jLabel5.setText("Filial:");

        edtCodFilial.setText("1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnAbrirOrigem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(edtArquivoOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancelarRegH010)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(edtAnoReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(edtCodFilial, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvarRegH010Sped)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAbrirOrigem)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(edtArquivoOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnCancelarRegH010))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(edtAnoReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(edtCodFilial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSalvarRegH010Sped))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        System.exit(0);
    }//GEN-LAST:event_formWindowClosed

    private void btnAbrirOrigemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirOrigemActionPerformed
        new Thread() {//instancia nova thread já implementando o método run()
            @Override
            public void run() {//sobrescreve o método run()
                try {
                    // limpa tabela o log
                    txtRegH010Sped.setText("");
                    lblObsRegHSped.setText("");
                    lstInventarioSped.clear();
                    btnSalvarRegH010Sped.setEnabled(false);
                    jProgressBar1.setValue(0);
                    btnCancelarRegH010.setVisible(true);
                    cancel = false;

                    // inicia a abertura do arquivo do sped
                    int countLine = 0;
                    int countLineH010 = 0;
                    int countLineH005 = 0;
                    String tipoReg = "";
                    List regH005;

                    JFileChooser fileChooser = new JFileChooser();
                    fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
                    int result = fileChooser.showOpenDialog(null);
                    if (result == JFileChooser.APPROVE_OPTION) {
                        File selectedFile = fileChooser.getSelectedFile();
                        System.out.println("Selected file: " + selectedFile.getAbsolutePath());

                        // ajusta o progressbar para o numero maximo de linhas
                        LineNumberReader linhaLeitura = new LineNumberReader(new FileReader(selectedFile));
                        linhaLeitura.skip(selectedFile.length());
                        int qtdLinha = linhaLeitura.getLineNumber();
                        jProgressBar1.setMaximum(qtdLinha + 1);

                        try ( BufferedReader br = new BufferedReader(new FileReader(selectedFile))) {

                            while (br.ready()) {

                                if (cancel) {
                                    MessageDialog.error("Operação Cancelada pelo usuario!");
                                    btnCancelarRegH010.setVisible(false);
                                    btnSalvarRegH010Sped.setEnabled(false);
                                    return;
                                }
                                String linha = br.readLine();
                                jProgressBar1.setValue(countLine++);
                                tipoReg = linha.substring(1, 5);
                                if (tipoReg.equalsIgnoreCase("H005")) {
                                    regH005 = new ArrayList(Arrays.asList(linha.split("\\|")));
                                    if (!regH005.isEmpty()) {

                                        if (countLineH005 >= 1) {
                                            countLineH005++;
                                            MessageDialog.info("Registro de inventario importados!");
                                            lblObsRegHSped.setText("Registros para gravar: " + lstInventarioSped.size());
                                            jProgressBar1.setValue(qtdLinha + 1);
                                            btnCancelarRegH010.setVisible(false);
                                            btnSalvarRegH010Sped.setEnabled(true);
                                            return;
                                        } else {
                                            edtAnoReferencia.setText(regH005.get(2).toString().substring(4, 8) + regH005.get(2).toString().substring(2, 4));
                                            countLineH005++;
                                        }
                                    }
                                }
                                if (tipoReg.equalsIgnoreCase("H010")) {
                                    geraRegH010Sped(linha, countLineH010++);
                                }
                                if (tipoReg.equalsIgnoreCase("H990")) {
                                    MessageDialog.info("Registro de inventario importados!");
                                    lblObsRegHSped.setText("Registros para gravar: " + lstInventarioSped.size());
                                    jProgressBar1.setValue(qtdLinha + 1);
                                    btnCancelarRegH010.setVisible(false);
                                    btnSalvarRegH010Sped.setEnabled(true);
                                    return;
                                }
                            }
                        }
                    }
                    MessageDialog.info("Processamento concluido com sucesso!");
                    btnCancelarRegH010.setVisible(false);
                } catch (HeadlessException | IOException ex) {
                    trataErro.trataException(ex, "btnGerarRegSpedActionPerformed");
                    btnCancelarRegH010.setVisible(false);
                } catch (Exception ex) {
                    trataErro.trataException(ex, "btnGerarRegSpedActionPerformed");
                    btnCancelarRegH010.setVisible(false);
                }
            }//- Fim do Run
        }
                .start();//Fim Thread        
    }//GEN-LAST:event_btnAbrirOrigemActionPerformed

    private void btnCancelarRegH010ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarRegH010ActionPerformed
        // TODO add your handling code here:
        this.cancel = true;
    }//GEN-LAST:event_btnCancelarRegH010ActionPerformed

    private void btnSalvarRegH010SpedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarRegH010SpedActionPerformed
        new Thread() {//instancia nova thread já implementando o método run()
            @Override
            public void run() {//sobrescreve o método run()
                try {
                    int idx = 0;
                    jProgressBar1.setMaximum(lstInventarioSped.size() + 1);
                    jProgressBar1.setValue(0);
                    lblObsRegHSped.setText("Registros: 0 de " + lstInventarioSped.size());

                    // valida se a tabela de inventario ja tem dados para o ano e mes de referencia
                    if (validaDataBaseInventarioSped(edtAnoReferencia.getText(), edtCodFilial.getText()) > 0) {
                        int regDel = 0;
                        if (MessageDialog.ask("Existem dados para o Ano / Mês e filial informada! \n Deseja apagar os dados ?") == MessageDialog.YES_OPTION) {
                            regDel = deleteDataBaseInventarioSped(edtAnoReferencia.getText(), edtCodFilial.getText());
                            MessageDialog.info("Foram deletados " + regDel + " do banco de dados!");
                        } else {
                            MessageDialog.info("Operação canelada pois existem dados!");
                        }
                    } else {
                        // grava os registro no banco de dados;
                        for (Brz_InventarioSped brz_InventarioSped : lstInventarioSped) {
                            addInventarioSped(brz_InventarioSped);
                            jProgressBar1.setValue(idx++);
                            lblObsRegHSped.setText("Registros: " + idx + " de " + lstInventarioSped.size());
                        }
                        MessageDialog.saveSucess();
                    }
                } catch (Exception ex) {
                    trataErro.trataException(ex, "btnSalvarRegH010SpedActionPerformed");
                }
            }//- Fim do Run
        }.start();//Fim Thread        

    }//GEN-LAST:event_btnSalvarRegH010SpedActionPerformed

    private int addInventarioSped(Brz_InventarioSped inventario) throws Exception {

        int ret = 0;

        String sqlInsert = "";
        wint.openConectOracle();

        // monta comando de insert de dados 
        sqlInsert = "INSERT INTO brz_invetarioSped (anomes, codfilial, codprod, unidade, quantidade, valorUnitario, valorTotal)"
                + " VALUES ( "
                + inventario.getAnoMes()
                + " , '" + inventario.getCodfilial() + "' "
                + " , " + inventario.getCodprod()
                + " , '" + inventario.getUnidade() + "' "
                + " , " + inventario.getQuantidade()
                + " , " + inventario.getValorUnitario()
                + " , " + inventario.getValorTotal()
                + " ) ";

        // monta comando insert de dados na base de destino
        if (!sqlInsert.isEmpty() && inventario != null && inventario.getCodprod() != 0) {
            // grava o novo registro no banco de dados de destino
            ret = wint.insertDados(sqlInsert);
            if (ret <= 0) {
                MessageDialog.error("Atenção! \nErro ao gerar novo registro na base de destino ! \n");
                return 0;
            }
        } else {
            MessageDialog.error("Atenção! \nFaltam dados gravar o vinculo!");
        }

        return ret;
    }

    private long validaDataBaseInventarioSped(String anomes, String filial) throws Exception {

        long ret = 0;

        String sql = "";
        List result = null;
        wint.openConectOracle();

        // monta comando de insert de dados 
        sql = "SELECT COUNT(*) AS QTDE_REG FROM brz_invetarioSped WHERE ANOMES = " + anomes + " AND CODFILIAL = '" + filial + "' ";

        // monta comando insert de dados na base de destino
        if (!sql.isEmpty() && anomes != null && filial != null && !anomes.isEmpty() && !filial.isEmpty()) {
            // grava o novo registro no banco de dados de destino
            result = wint.selectDados(sql);
            ret = Long.parseLong(result.get(0).toString().replace("[", "").replace("]", "").trim());
        } else {
            MessageDialog.error("Atenção! \nFaltam dados para validação!");
        }

        return ret;
    }

    private int deleteDataBaseInventarioSped(String anomes, String filial) throws Exception {

        int ret = 0;

        String sqlDelete = "";
        List result = null;
        wint.openConectOracle();

        // monta comando de insert de dados 
        sqlDelete = "DELETE FROM brz_invetarioSped WHERE ANOMES = " + anomes + " AND CODFILIAL = '" + filial + "' ";

        // monta comando insert de dados na base de destino
        if (!sqlDelete.isEmpty() && anomes != null && filial != null && !anomes.isEmpty() && !filial.isEmpty()) {
            // grava o novo registro no banco de dados de destino
            ret = wint.deleteDados(sqlDelete);
        } else {
            MessageDialog.error("Atenção! \nFaltam dados para exclusão!");
        }

        return ret;
    }

    private int geraRegH010Sped(String linha, int indexLinha) throws Exception {
        int ret = 0;

        List regH010;
        Brz_InventarioSped regHsped = new Brz_InventarioSped();
        // verifica se o registro produto-de-para existe
        if (!linha.isEmpty()) {
            String tipoReg = linha.substring(1, 5);

            if (tipoReg.equalsIgnoreCase("H010")) {
                regH010 = new ArrayList(Arrays.asList(linha.split("\\|")));
                txtRegH010Sped.append(indexLinha + " - " + linha + "\n");

                if (!regH010.isEmpty()) {
                    regHsped.setAnoMes(Long.parseLong(edtAnoReferencia.getText()));
                    regHsped.setCodfilial(edtCodFilial.getText());
                    regHsped.setCodprod(Long.parseLong(regH010.get(2).toString()));
                    regHsped.setUnidade(regH010.get(3).toString());
                    // valida se tem 3 casas depois da virgula
                    if (regH010.get(4).toString().contains(",")) {
                        String qtd = regH010.get(4).toString();
                        String qtdInt = qtd.split(",")[0];
                        String qtdFrac = qtd.split(",")[1];
                        if (qtdFrac.length() < 3) {
                            regHsped.setQuantidade(Double.parseDouble(qtdInt + Formato.zerosDireita(qtdFrac, 3)));
                        } else {
                            regHsped.setQuantidade(Double.parseDouble(Formato.somenteNumeros(regH010.get(4).toString())));
                        }
                    } else {
                        regHsped.setQuantidade(Double.parseDouble(Formato.somenteNumeros(regH010.get(4).toString())));
                    }
                    regHsped.setValorUnitario(Double.parseDouble(regH010.get(5).toString().replace(',', '.')));
                    regHsped.setValorTotal(Double.parseDouble(regH010.get(6).toString().replace(',', '.')));

                    lstInventarioSped.add(regHsped);
                    txtRegH010Sped.append("\t" + regHsped + "\n");
                } else {
                    MessageDialog.error("tipo de registro nao tratado! " + tipoReg);
                }
            }
        }

        return ret;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            trataErro.trataException(ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Brz015().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirOrigem;
    private javax.swing.JButton btnCancelarRegH010;
    private javax.swing.JButton btnSalvarRegH010Sped;
    private javax.swing.JTextField edtAnoReferencia;
    private javax.swing.JTextField edtArquivoOrigem;
    private javax.swing.JTextField edtCodFilial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea lblObsRegHSped;
    private javax.swing.JTextArea txtRegH010Sped;
    // End of variables declaration//GEN-END:variables
}
