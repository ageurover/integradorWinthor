/*
 * CurrencyField.java
 *
 * Created on 8 de Marco de 2006, 17:24
 */
package winthorDb.util;

import java.awt.event.FocusEvent;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.text.NumberFormat;
import javax.swing.SwingUtilities;
import javax.swing.text.NumberFormatter;
import winthorDb.error.trataErro;

/**
 *
 * @author Ageu Rover
 */
@SuppressWarnings("StaticNonFinalUsedInInitialization")
public class CurrencyField extends javax.swing.JFormattedTextField {

    public static NumberFormatter formatter;
    public static NumberFormat currencyFormat = NumberFormat.getInstance();

    static {
        try {
            currencyFormat.setMaximumFractionDigits(6);
            currencyFormat.setMinimumFractionDigits(2);
            formatter = new NumberFormatter(currencyFormat);
            formatter.setValueClass(BigDecimal.class);
        } catch (Exception ex) {
            trataErro.trataException(ex, "Componente.CurrencyField");
        }
    }

    @Override
    protected void processFocusEvent(FocusEvent e) {

        if (!e.isTemporary()) {
            super.processFocusEvent(e);
            SwingUtilities.invokeLater(new Runnable() {

                @Override
                public void run() {
                    if (isEditable() || isEnabled()) {
                        selectAll();
                    }
                }
            });
            super.addNotify();
        }
    }

    /**
     * Creates new form BeanForm
     */
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public CurrencyField() {
        super(formatter);
        initComponents();
        setValue(BigDecimal.ZERO);
        //super.addNotify();
    }

    public BigDecimal getCurr() {
       return (BigDecimal) getValue();
    }

    public void setCurr(BigDecimal curr) {
        if (curr == null) {
            setValue(BigDecimal.ZERO);
        } else {
            setValue(curr);
        }
        super.addNotify();
    }

    public void setCurr(Integer vlrInt) {
        if (vlrInt == null) {
            setValue(BigDecimal.ZERO);
        } else {
            setValue(new BigDecimal(vlrInt));
        }
        super.addNotify();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setForeground(new java.awt.Color(0, 51, 204));
        setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        setText("0,00");
        setSelectionStart(0);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
    }// </editor-fold>//GEN-END:initComponents

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
        // TODO add your handling code here:
        if (!isNumeros(this.getText())) {
            @SuppressWarnings({"ThrowableInstanceNotThrown", "ThrowableInstanceNeverThrown"})
            Exception exception = new Exception("Informe somente valores numéricos!");
        }
        super.addNotify();
    }//GEN-LAST:event_formFocusLost

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        if ((evt.getKeyCode() < KeyEvent.VK_0 || evt.getKeyCode() > KeyEvent.VK_9)
                && (evt.getKeyCode() != KeyEvent.VK_COMMA)) {
            evt.setKeyCode(0);
        } else {
            super.addNotify();
        }
    }//GEN-LAST:event_formKeyPressed

private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
// TODO add your handling code here:
    //this.setText("");
    //select(0, this.getText().length());
    this.selectAll();
    super.addNotify();
}//GEN-LAST:event_formFocusGained

    /**
     * Obtem uma string que representa os números digitados no campo, e verifica
     * se na string possui apenas números.
     *
     * @param valor
     * @return
     */
    private boolean isNumeros(String valor) {
        if (valor != null) {
            if (valor.isEmpty()) {
                final String NUMEROS = "0123456789,";
                for (int i = 0; i < valor.length(); i++) {
                    char caracter = valor.charAt(i);
                    if (NUMEROS.indexOf(caracter) == -1) {
                        return false;
                    }
                }
            }
        }
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
